pipeline {
    
    parameters {
        string(defaultValue: "https://github.com/fnJustin/gtest.git", description: 'git repo to pull', name: 'REPO')
        string(defaultValue: "osx", description: 'node label that is valid for', name: 'NODELABEL')
        string(defaultValue: "vfx18_mac_Release", description: 'profile', name: 'PROFILE')
        
    }

    agent any
    
    environment {
        PATH = 'PATH=/usr/local/bin/:$PATH:/Applications/CMake.app/Contents/bin'
    }

    stages{
       
        stage('SCM') { 
            steps{
                //clean out old build
                sh 'echo ${NODELABEL}'
                echo 'PATH is: $PATH'
                sh 'rm -rf *'
                git '${REPO}'
            }
        }
        stage ('Conan install'){
            //get dependencies
            steps{
                sh 'mkdir build'
                sh 'conan install . --install-folder=./build --profile=${PROFILE}'
            }
        }

        stage('Conan Build') {
            steps{
                //build it
                sh 'conan build . --build-folder=./build'
            }
        }

        stage('UnitTests') {
            steps{
                //test it
                sh 'cd build && ./tests --gtest_output=xml:tests.xml'
                junit '**/build/tests.xml'
                sh 'cd build && gcov ../src/*.cpp --object-directory CMakeFiles/tests.dir/'
                sh 'gcovr -r . -x --object-directory=build >coverage.xml'
            }
        }
    }
}